1  # NOTE: This is supposed to be a word count. But apparently any number is fine.
# START - Generated qt_words.dic file
PyQt
PyQt4
PyQt5
PySide
PySide2
QObject
QWidget
Qt
Qt.py
QtCore
QtGui
QtWidgets
layout
widget

# END - Generated qt_words.dic file
# START - Generated programming_tags.dic file
FIXME
IMPORTANT
NOTE
PERF
PERFORMANCE
TODO

# END - Generated programming_tags.dic file
# START - Generated file_types.dic file
json
cpp
python
bash
c++
cmake
vim
html
HTML

# END - Generated file_types.dic file
# START - Generated websites.dic file
stackoverflow

# END - Generated websites.dic file
# START - Generated job_generic.dic file
# Words that I use in my line of work
pipeline/S
workflow/S

# END - Generated job_generic.dic file
# START - Generated programming_commands.dic file
sudo

# END - Generated programming_commands.dic file
# START - Generated english_words.dic file
# Generic words used by most English speakers
# Reference: https://raw.githubusercontent.com/powerlanguage/word-lists/master/1000-most-common-words.txt
#
I
a
able
about
account
across
act/S
active
add/S
affect/S
after
again
against
age
ago
all
allow
allowed
almost
also
alway/S
am
amount
an
and
angle/S
answer/S
any
anything
are
arm
art
as
ask/S
at
author/S
avoid/S
back/S
bad/Y
bar
base/S
bat/S
be
because
bed
before
behavior
better
between
big
bit
block
body
bool
bottom
box
branch
broken
build
building
built
but
button
buy
by
call
camera
can
cannot
car
card
care
cause
certain
chain
chance
change
changes
characters
cheap
check
children
class
clean
clear
close
code
column
come
command
common
compare
comparison
complete
condition
conflict
connection
const
control
copy
could
cover
create
created
current
cursor
curve
custom
cut
danger
date
day
decision
deep
default
delete
describe
design
destination
detail
did
die
different
direct
direction
disable
distance
divide
divided
do
does
dog
done
doubt
down
drag
drop
each
early
easy
edge
effect
either
emit
empty
enable
end
enough
equal
equals
error
etc
even
event
ever
every
everything
example
extra
fact
fall
false
far
fast
feature
few
field
file
files
fill
filtered
find
fine
first
fit
fix
fixed
flag
flat
floor
fly
fold
folder
follow
for
force
form
forward
found
four
free
from
front
full
fun
function
future
general
get
give
given
go
good
got
graph
group
growth
guide
had
hard
has
have
he
head
height
help
her
here
hidden
high
him
his
history
hit
hold
holds
hole
hook
hot
hour
how
idea
if
ignore
importable
important
in
increase
information
inside
install
instead
into
is
it
item
its
job
join
joy
jump
just
keep
key
kick
know
label
language
large
last
late
later
latest
lay
least
led
left
let
lets
letter
level
library
lie
lift
light
like
limit
line
list
little
lock
log
long
look
looking
loss
lot  # As in "a lot"
low
machine
main
make
makes
manager
many
map
margin
mark
mass
match
matching
material
may
me
means
measure
men
merge
method
middle
minimum
minus
minute
mix
mixed
mode
month
more
most
motion
mouse
move
much
multiple
must
my
name
names
near
necessary
need
net
new
next
no
node
nor
normal
not
note
now
number
object
objects
of
off
oh
okay
old
on
one
only
open
operation
opposite
option
or
order
other
our
out
over
own
owner
packages
page
pair
pairs
parallel
parent
part
pass
past
paste
path
people
per
person
picture
pin
pipe
place
plant
please
plus
point
poor
position
possible
prefix
present
price
print
private
process
produce
profit
program
property
public
pull
purpose
push
put
python
quality
question
quick
rail
ran
range
rate
read
reading
ready
reason
record
red
regular
remove
render
replace
replaces
request
required
rest
results
return
returned
right
room
root
rough
round
row
rub
rule
run
safe
same
sat
saw
say
scale
search
second
seconds
see
seem
select
selection
self
send
separate
set
she
shelf
ship
short
show
shut
side
sign
simple
sit
six
size
skip
skipping
sleep
slow
small
smooth
so
soft
solid
some
sometimes
sort
source
space
special
stage
start
starting
starts
statement
station
step
still
stop
store
stretch
such
summary
support
sure
table
tail
take
takes
talk
tall
tell
ten
test
tests
text
than
that
the
their
them
then
there
these
they
this
though
three
through
tie
time
times
tired
to
together
too
top
touch
tree
trick
trouble
true
try
turn
two
type
under
unfiltered
unit
up
update
us
use
used
user
usually
value
variable
variables
very
view
wait
waiting
walk
was
watch
way
we
week
weight
well
whatever
when
where
which
while
who
why
will
window
with
within
word
words
work
works
wrap
write
wrong
year
yes
yet
you
your/S

# END - Generated english_words.dic file
# START - Generated programming_generic.dic file
# Hard English words that are common in programming-related topics
api
attribute/S
batch
cache/S
child
class # ES
color
comma/S
configuration
controller/S
database
docstring/S
documentation
ensure
exist
http
https
import/S
inherit/S
instance/S
invalid/S
iteration/S
library # IES
local/S
log/S
major/S
message/S
minor/S
model/S
module/S
namespace/S
negative/S
node/S
patch # ES
plug/S
positive # S/ly
query # ies
raw
recursive/Y
reset/S
rgb
role/S
save/S
script/S
select # ed
setting/S
shell/S
standard/S
stderr
stdout
symlink/S
sync # es
syntax
terminal/S
third-party
thread/S
unique
validate  # /d
verbose # ly
version/S
view/S
viewer/S
visibility # ies

# END - Generated programming_generic.dic file
# START - Generated programming_extras.dic file
# Words that I like to use which tend to also make documentation easier to write
ensure

# END - Generated programming_extras.dic file
# START - Generated website_parts.dic file
www

# END - Generated website_parts.dic file
# START - Generated c_keywords.dic file
struct/S  # The keyword is struct but docstrings often pluralize it

# END - Generated c_keywords.dic file
# START - Generated documentation.dic file
# "extra" is usually better than "optional" but we need to keep it for docstrings
optional

# END - Generated documentation.dic file
# START - Generated computer_generic.dic file
# Hard English words that are common in computer-related topics
GUI
background
data
defer
disk
display
environment
exception
execution
fault
filter
flag/S
font
frame/S
index
memory # ies
segmentation
signal/S
slot/S

# END - Generated computer_generic.dic file
# START - Generated human_languages.dic file
english # Capital

# END - Generated human_languages.dic file
# START - Generated programming_concepts.dic file
# Programming Concepts
api
cache
classes
comma
controller
docstring
http
https
import
libraries
local
major
minor
model
module
patch
plug
stackoverflow
standard
stderr
stdout
first-party
third-party
thread

# END - Generated programming_concepts.dic file
# START - Generated c_generic.dic file
# Ideas put forward by C-like languages
reference/S

# END - Generated c_generic.dic file
# START - Generated gui_things.dic file
dialog/S
widget/S

# END - Generated gui_things.dic file
# START - Generated python_keywords.dic file
# Python-related keywords
# These are keywords that are not actual words but we include anyway because
# they're keywords that Python uses
#
None
NoneType
RuntimeError
ValueError
arg
args
callable
classmethod
cls
def
dict
except
id
int
iterable
raises
returns
staticmethod
str
string
tuple

# Python keywords `import keyword;print(keyword.kwlist)`
and
as
assert
break
class
continue
def
del
elif
else
except
exec
finally
for
from
global
if
import
in
is
lambda
not
or
pass
print
raise
return
try
while
with
yield

# Python built-in words
ArithmeticError
AssertionError
AttributeError
BaseException
BufferError
BytesWarning
DeprecationWarning
EOFError
Ellipsis
EnvironmentError
Exception
False
FloatingPointError
FutureWarning
GeneratorExit
IOError
ImportError
ImportWarning
IndentationError
IndexError
KeyError
KeyboardInterrupt
LookupError
MemoryError
NameError
None
NotImplemented
NotImplementedError
OSError
OverflowError
PendingDeprecationWarning
ReferenceError
RuntimeError
RuntimeWarning
StandardError
StopIteration
SyntaxError
SyntaxWarning
SystemError
SystemExit
TabError
True
TypeError
UnboundLocalError
UnicodeDecodeError
UnicodeEncodeError
UnicodeError
UnicodeTranslateError
UnicodeWarning
UserWarning
ValueError
Warning
ZeroDivisionError
__debug__
__doc__
__import__
__name__
__package__
abs
all
any
apply
basestring
bin
bool
buffer
bytearray
bytes
callable
chr
classmethod
cmp
coerce
compile
complex
copyright
credits
delattr
dict
dir
divmod
enumerate
eval
execfile
exit
file
filter
float
float
format
format
frozenset
frozenset
getattr
globals
hasattr
hash
help
hex
id
input
int
intern
isinstance
issubclass
iter
len
license
list
locals
long
map
max
memoryview
min
next
object
oct
open
ord
pow
print
property
quit
range
raw_input
reduce
reload
repr
reversed
round
set
setattr
slice
sorted
staticmethod
str
sum
super
tuple
type
unichr
unicode
vars
xrange
zip

# END - Generated python_keywords.dic file